name: Deploy to EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-central-1
  ECR_REGISTRY: 060623761618.dkr.ecr.eu-central-1.amazonaws.com

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push Docker images
      run: |
        docker build -t $ECR_REGISTRY/task/three-tier-frontend:latest ./frontend
        docker build -t $ECR_REGISTRY/task/three-tier-backend:latest ./backend
        docker push $ECR_REGISTRY/task/three-tier-frontend:latest
        docker push $ECR_REGISTRY/task/three-tier-backend:latest

    - name: Copy docker-compose.yaml to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: "docker-compose.yaml"
        target: "~/"

    - name: Deploy on EC2 via SSH
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY
          cd ~
          docker compose pull
          docker compose down
          docker compose up -d
